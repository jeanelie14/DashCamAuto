# Script PowerShell pour lancer l'application DashCam Auto
Write-Host "üöÄ Lancement de DashCam Auto - React Native 0.81.4" -ForegroundColor Green
Write-Host "=================================================" -ForegroundColor Green

# Fonction pour v√©rifier si un processus est en cours
function Test-ProcessRunning {
    param([string]$ProcessName)
    return (Get-Process -Name $ProcessName -ErrorAction SilentlyContinue) -ne $null
}

# Fonction pour attendre qu'un processus se termine
function Wait-ForProcess {
    param([string]$ProcessName, [int]$TimeoutSeconds = 30)
    $timeout = (Get-Date).AddSeconds($TimeoutSeconds)
    while ((Get-Process -Name $ProcessName -ErrorAction SilentlyContinue) -ne $null) {
        if ((Get-Date) -gt $timeout) {
            Write-Host "‚ö†Ô∏è  Timeout atteint pour $ProcessName" -ForegroundColor Yellow
            break
        }
        Start-Sleep -Seconds 2
    }
}

try {
    # 1. V√©rifier que l'√©mulateur est connect√©
    Write-Host "1. V√©rification de l'√©mulateur Android..." -ForegroundColor Yellow
    $devices = adb devices | Select-String "device$"
    if ($devices.Count -eq 0) {
        Write-Host "‚ùå Aucun √©mulateur Android connect√© !" -ForegroundColor Red
        Write-Host "   Veuillez d√©marrer votre √©mulateur Android et r√©essayer." -ForegroundColor Red
        exit 1
    }
    Write-Host "‚úÖ √âmulateur connect√© : $($devices[0].ToString().Split()[0])" -ForegroundColor Green

    # 2. Arr√™ter Metro s'il est en cours
    Write-Host "2. Arr√™t des processus Metro en cours..." -ForegroundColor Yellow
    if (Test-ProcessRunning "node") {
        Write-Host "   Arr√™t de Metro..." -ForegroundColor Cyan
        Get-Process -Name "node" -ErrorAction SilentlyContinue | Stop-Process -Force -ErrorAction SilentlyContinue
        Wait-ForProcess "node" 10
    }
    Write-Host "‚úÖ Processus Metro arr√™t√©s" -ForegroundColor Green

    # 3. Nettoyer les builds Android
    Write-Host "3. Nettoyage des builds Android..." -ForegroundColor Yellow
    if (Test-Path "android\build") { 
        Remove-Item -Recurse -Force "android\build" -ErrorAction SilentlyContinue
        Write-Host "   Build Android nettoy√©" -ForegroundColor Cyan
    }
    if (Test-Path "android\app\build") { 
        Remove-Item -Recurse -Force "android\app\build" -ErrorAction SilentlyContinue
        Write-Host "   Build app nettoy√©" -ForegroundColor Cyan
    }
    Write-Host "‚úÖ Builds nettoy√©s" -ForegroundColor Green

    # 4. Compiler et installer l'APK
    Write-Host "4. Compilation et installation de l'APK..." -ForegroundColor Yellow
    Set-Location "android"
    Write-Host "   Compilation en cours..." -ForegroundColor Cyan
    & ".\gradlew.bat" installGeneralDebug
    if ($LASTEXITCODE -ne 0) {
        Write-Host "‚ùå Erreur lors de la compilation !" -ForegroundColor Red
        Set-Location ".."
        exit 1
    }
    Set-Location ".."
    Write-Host "‚úÖ APK install√© avec succ√®s" -ForegroundColor Green

    # 5. D√©marrer Metro en arri√®re-plan
    Write-Host "5. D√©marrage de Metro..." -ForegroundColor Yellow
    Write-Host "   Metro va d√©marrer en arri√®re-plan..." -ForegroundColor Cyan
    Start-Process -FilePath "npm" -ArgumentList "start" -WindowStyle Minimized -PassThru | Out-Null
    
    # Attendre que Metro d√©marre
    Write-Host "   Attente du d√©marrage de Metro..." -ForegroundColor Cyan
    Start-Sleep -Seconds 5
    
    # V√©rifier que Metro est d√©marr√©
    $metroStarted = $false
    for ($i = 0; $i -lt 10; $i++) {
        if (Test-ProcessRunning "node") {
            $metroStarted = $true
            break
        }
        Start-Sleep -Seconds 2
    }
    
    if ($metroStarted) {
        Write-Host "‚úÖ Metro d√©marr√© avec succ√®s" -ForegroundColor Green
    } else {
        Write-Host "‚ö†Ô∏è  Metro pourrait ne pas √™tre d√©marr√© correctement" -ForegroundColor Yellow
    }

    # 6. Afficher les informations de connexion
    Write-Host "6. Informations de connexion..." -ForegroundColor Yellow
    Write-Host "   Metro: http://localhost:8081" -ForegroundColor Cyan
    Write-Host "   √âmulateur: $($devices[0].ToString().Split()[0])" -ForegroundColor Cyan
    Write-Host "   Application: DashCam Auto" -ForegroundColor Cyan

    # 7. Afficher les commandes utiles
    Write-Host ""
    Write-Host "üéØ Commandes utiles :" -ForegroundColor Green
    Write-Host "   Recharger l'app: Appuyez sur 'r' dans le terminal Metro" -ForegroundColor White
    Write-Host "   Menu Dev: Appuyez sur 'd' dans le terminal Metro" -ForegroundColor White
    Write-Host "   Logs: adb logcat | findstr 'DashCamAuto'" -ForegroundColor White
    Write-Host "   Arr√™ter Metro: Ctrl+C dans le terminal Metro" -ForegroundColor White

    # 8. Afficher le statut final
    Write-Host ""
    Write-Host "üéâ APPLICATION LANC√âE AVEC SUCC√àS !" -ForegroundColor Green
    Write-Host "=====================================" -ForegroundColor Green
    Write-Host "‚úÖ √âmulateur connect√©" -ForegroundColor Green
    Write-Host "‚úÖ APK install√©" -ForegroundColor Green
    Write-Host "‚úÖ Metro d√©marr√©" -ForegroundColor Green
    Write-Host "‚úÖ Pr√™t pour le d√©veloppement" -ForegroundColor Green
    Write-Host ""
    Write-Host "üì± Sur votre √©mulateur, ouvrez l'application 'DashCam Auto'" -ForegroundColor Cyan
    Write-Host "   Vous devriez voir l'√©cran de test avec le message de succ√®s !" -ForegroundColor Cyan

} catch {
    Write-Host ""
    Write-Host "‚ùå ERREUR LORS DU LANCEMENT !" -ForegroundColor Red
    Write-Host "=================================" -ForegroundColor Red
    Write-Host "Erreur: $($_.Exception.Message)" -ForegroundColor Red
    Write-Host ""
    Write-Host "üîß Solutions possibles :" -ForegroundColor Yellow
    Write-Host "   1. V√©rifiez que l'√©mulateur Android est d√©marr√©" -ForegroundColor White
    Write-Host "   2. V√©rifiez que ADB fonctionne : adb devices" -ForegroundColor White
    Write-Host "   3. Red√©marrez l'√©mulateur si n√©cessaire" -ForegroundColor White
    Write-Host "   4. V√©rifiez que tous les ports sont libres" -ForegroundColor White
    exit 1
}
